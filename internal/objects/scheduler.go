package objects

import (
	"bytes"
	"encoding/json"
	"log"
	"os"
	"os/exec"
	"time"

	"github.com/robfig/cron/v3"
)

// StartAutoParsing –∑–∞–ø—É—Å–∫–∞—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º
func StartAutoParsing(profileURL, filename string) {
	loc, err := time.LoadLocation("Europe/Kyiv")
	if err != nil {
		log.Fatalf("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —á–∞—Å–æ–≤—É –∑–æ–Ω—É: %v", err)
	}

	c := cron.New(
		cron.WithLocation(loc),
		cron.WithSeconds(), // –¥–æ–∑–≤–æ–ª—è—î –∑–∞–¥–∞–≤–∞—Ç–∏ cron –∑ —Å–µ–∫—É–Ω–¥–∞–º–∏
	)

	// –©–æ–¥–Ω—è –æ 00:00
	_, err = c.AddFunc("0 0 0 * * *", func() {
		runScheduledParsing(profileURL, filename)
	})
	if err != nil {
		log.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ 00:00:", err)
	}

	// –û 11:00 –∑ –ø–æ–Ω–µ–¥—ñ–ª–∫–∞ –ø–æ –ø'—è—Ç–Ω–∏—Ü—é
	_, err = c.AddFunc("0 0 11 * * 1-5", func() {
		runScheduledParsing(profileURL, filename)
	})
	if err != nil {
		log.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ 11:00:", err)
	}

	// –û 18:00 –∑ –ø–æ–Ω–µ–¥—ñ–ª–∫–∞ –ø–æ –ø'—è—Ç–Ω–∏—Ü—é
	_, err = c.AddFunc("0 0 18 * * 1-5", func() {
		runScheduledParsing(profileURL, filename)
	})
	if err != nil {
		log.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ 18:00:", err)
	}

	c.Start()
	log.Println("‚è∞ –ê–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω–æ –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º...")
}

// runScheduledParsing –≤–∏–∫–æ–Ω—É—î –ø–∞—Ä—Å–∏–Ω–≥, –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è, –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ –∑–∞–ø—É—Å–∫ JS –ø—Ä–∏ –∑–º—ñ–Ω—ñ
func runScheduledParsing(profileURL, filename string) {
	log.Printf("üîç –ü–æ—á–∏–Ω–∞—î–º–æ –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ %s...", profileURL)

	// –ö—Ä–æ–∫ 1: –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤—ñ –æ–±'—î–∫—Ç–∏
	results, err := ParseRealtorProfile(profileURL)
	if err != nil {
		log.Println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É:", err)
		return
	}

	// –ö—Ä–æ–∫ 2: –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ –≤—ñ–¥—Ä—ñ–∑–Ω—è—é—Ç—å—Å—è –Ω–æ–≤—ñ –¥–∞–Ω—ñ –≤—ñ–¥ —ñ—Å–Ω—É—é—á–æ–≥–æ —Ñ–∞–π–ª—É
	changed, err := hasPropertiesChanged(results, filename)
	if err != nil {
		log.Println("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—ñ —Ñ–∞–π–ª—ñ–≤:", err)
		return
	}

	if !changed {
		log.Println("üü° –î–∞–Ω—ñ –Ω–µ –∑–º—ñ–Ω–∏–ª–∏—Å—è ‚Äî –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ.")
		return
	}

	// –ö—Ä–æ–∫ 3: –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–æ–≤—ñ –æ–±'—î–∫—Ç–∏ —É —Ñ–∞–π–ª
	err = SavePropertiesToFile(results, filename)
	if err != nil {
		log.Println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ:", err)
		return
	}
	log.Printf("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —É —Ñ–∞–π–ª %s", len(results), filename)

	// –ö—Ä–æ–∫ 4: –ó–∞–ø—É—Å—Ç–∏—Ç–∏ generateStreetURL.js
	err = runGenerateStreetURL()
	if err != nil {
		log.Println("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É generateStreetURL.js:", err)
		return
	}
	log.Println("üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ search_URLs.json —á–µ—Ä–µ–∑ generateStreetURL.js")
}

// hasPropertiesChanged –ø–æ—Ä—ñ–≤–Ω—é—î –Ω–æ–≤—ñ –¥–∞–Ω—ñ –∑ —É–∂–µ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–º–∏
func hasPropertiesChanged(newData any, filename string) (bool, error) {
	// –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –Ω–æ–≤—ñ –¥–∞–Ω—ñ –≤ JSON
	newJSON, err := json.MarshalIndent(newData, "", "  ")
	if err != nil {
		return false, err
	}

	// –ó—á–∏—Ç—É—î–º–æ —Å—Ç–∞—Ä–∏–π —Ñ–∞–π–ª
	oldJSON, err := os.ReadFile(filename)
	if err != nil {
		// –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î ‚Äî –≤–≤–∞–∂–∞—î–º–æ, —â–æ –¥–∞–Ω—ñ –∑–º—ñ–Ω–∏–ª–∏—Å—è
		if os.IsNotExist(err) {
			return true, nil
		}
		return false, err
	}

	// –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –≤–º—ñ—Å—Ç
	return !bytes.Equal(newJSON, oldJSON), nil
}

// runGenerateStreetURL –≤–∏–∫–ª–∏–∫–∞—î —Å–∫—Ä–∏–ø—Ç generateStreetURL.js
func runGenerateStreetURL() error {
	cmd := exec.Command("node", "scripts/generateStreetURL.js")
	cmd.Stdout = os.Stdout
	cmd.Stderr = os.Stderr
	return cmd.Run()
}
