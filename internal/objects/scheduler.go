package objects

import (
	"log"
	"time"

	"github.com/robfig/cron/v3"
)

// StartAutoParsing –∑–∞–ø—É—Å–∫–∞—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º
func StartAutoParsing(profileURL, filename string) {
	loc, err := time.LoadLocation("Europe/Kyiv")
	if err != nil {
		log.Fatalf("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —á–∞—Å–æ–≤—É –∑–æ–Ω—É: %v", err)
	}

	c := cron.New(
		cron.WithLocation(loc),
		cron.WithSeconds(), // –¥–æ–∑–≤–æ–ª—è—î –∑–∞–¥–∞–≤–∞—Ç–∏ cron –∑ —Å–µ–∫—É–Ω–¥–∞–º–∏
	)

	// –©–æ–¥–Ω—è –æ 00:00
	_, err = c.AddFunc("0 0 0 * * *", func() {
		runScheduledParsing(profileURL, filename)
	})
	if err != nil {
		log.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ 00:00:", err)
	}

	// –û 11:00 –∑ –ø–æ–Ω–µ–¥—ñ–ª–∫–∞ –ø–æ –ø'—è—Ç–Ω–∏—Ü—é
	_, err = c.AddFunc("0 0 11 * * 1-5", func() {
		runScheduledParsing(profileURL, filename)
	})
	if err != nil {
		log.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ 11:00:", err)
	}

	// –û 18:00 –∑ –ø–æ–Ω–µ–¥—ñ–ª–∫–∞ –ø–æ –ø'—è—Ç–Ω–∏—Ü—é
	_, err = c.AddFunc("0 0 18 * * 1-5", func() {
		runScheduledParsing(profileURL, filename)
	})
	if err != nil {
		log.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ 18:00:", err)
	}

	c.Start()
	log.Println("‚è∞ –ê–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω–æ –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º...")
}

// runScheduledParsing –≤–∏–∫–æ–Ω—É—î —Å–∞–º –ø–∞—Ä—Å–∏–Ω–≥ —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
func runScheduledParsing(profileURL, filename string) {
	log.Printf("üîç –ü–æ—á–∏–Ω–∞—î–º–æ –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ %s...", profileURL)

	results, err := ParseRealtorProfile(profileURL)
	if err != nil {
		log.Println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É:", err)
		return
	}

	err = SavePropertiesToFile(results, filename)
	if err != nil {
		log.Println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ:", err)
		return
	}

	log.Printf("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —É —Ñ–∞–π–ª %s", len(results), filename)
}
