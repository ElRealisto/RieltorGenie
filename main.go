// // package main

// // import (
// // 	"log"
// // 	"os"

// // 	"github.com/ElRealisto/RieltorGenie/internal/bot"
// // 	"github.com/ElRealisto/RieltorGenie/internal/users"
// // 	"github.com/joho/godotenv"
// // )

// // func main() {
// // 	err := godotenv.Load()
// // 	if err != nil {
// // 		log.Fatal("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É")
// // 	}

// // 	token := os.Getenv("TELEGRAM_BOT_TOKEN")
// // 	if token == "" {
// // 		log.Fatal("TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
// // 	}

// // 	users.InitDefaultUsers()

// // 	b, err := bot.New(token)
// // 	if err != nil {
// // 		log.Fatalf("–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–æ—Ç–∞: %v", err)
// // 	}

// //		b.Start()
// //	}
// // package main

// // import (
// // 	"log"
// // 	"path/filepath"

// // 	"github.com/ElRealisto/RieltorGenie/internal/objects"
// // )

// // func main() {
// // 	properties, err := objects.ParseAllCategories()
// // 	if err != nil {
// // 		log.Fatalf("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É –æ–±'—î–∫—Ç—ñ–≤: %v", err)
// // 	}

// // 	outputPath := filepath.Join("internal", "objects", "parsed_objects.json")

// // 	err = objects.SavePropertiesToFile(properties, outputPath)
// // 	if err != nil {
// // 		log.Fatalf("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —É —Ñ–∞–π–ª: %v", err)
// // 	}

// //		log.Printf("‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —É %s", len(properties), outputPath)
// //	}
// package main

// import (
// 	"log"
// 	"os"
// 	"path/filepath"
// 	"strings"

// 	"github.com/ElRealisto/RieltorGenie/internal/bot"
// 	"github.com/ElRealisto/RieltorGenie/internal/objects"
// 	"github.com/ElRealisto/RieltorGenie/internal/users"
// 	"github.com/joho/godotenv"
// )

// func main() {
// 	// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ .env —Ñ–∞–π–ª—É
// 	err := godotenv.Load()
// 	if err != nil {
// 		log.Fatal("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É")
// 	}

// 	// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É Telegram –±–æ—Ç–∞ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
// 	token := os.Getenv("TELEGRAM_BOT_TOKEN")
// 	if token == "" {
// 		log.Fatal("TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
// 	}

// 	// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
// 	users.InitDefaultUsers()

// 	// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
// 	allUsers := users.GetAll()

// 	// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
// 	b, err := bot.New(token)
// 	if err != nil {
// 		log.Fatalf("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–æ—Ç–∞: %v", err)
// 	}

// 	// –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤ –æ–∫—Ä–µ–º—ñ–π –≥–æ—Ä—É—Ç–∏–Ω—ñ
// 	go b.Start()

// 	// –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –≤ –æ–∫—Ä–µ–º—ñ–π –≥–æ—Ä—É—Ç–∏–Ω—ñ
// 	go objects.StartMonitoring(allUsers)

// 	for _, u := range allUsers {
// 		if u.Role != users.RealtorRole {
// 			continue
// 		}

// 		// –ü–∞—Ä—Å–∏–Ω–≥ –æ–±'—î–∫—Ç—ñ–≤ —Ä—ñ—î–ª—Ç–æ—Ä–∞
// 		properties, err := objects.ParseRealtorProfile(u.ProfileURL)
// 		if err != nil {
// 			log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –ø—Ä–æ—Ñ—ñ–ª—é %s: %v", u.ProfileURL, err)
// 			continue
// 		}

// 		// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É —É parsed_objects.json
// 		internalPath := filepath.Join("internal", "objects", "parsed_objects.json")
// 		err = objects.SavePropertiesToFile(properties, internalPath)
// 		if err != nil {
// 			log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è JSON: %v", err)
// 			continue
// 		}
// 		log.Printf("‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —É %s", len(properties), internalPath)

// 		// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö —É data/
// 		profileSlug := strings.ReplaceAll(strings.TrimPrefix(u.ProfileURL, "https://"), "/", "_")
// 		baseDir := filepath.Join("data", profileSlug)

// 		err = objects.SaveObjectsByCategory(properties, baseDir)
// 		if err != nil {
// 			log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö: %v", err)
// 			continue
// 		}
// 		log.Printf("üì¶ –£—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –æ–±'—î–∫—Ç–∏ —É %s", baseDir)

// 		// –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥—É
// 		objects.StartAutoParsing(u.ProfileURL, internalPath)

// 		// –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è ‚Äî –≤–∏—Ö—ñ–¥ –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ —Ä—ñ—î–ª—Ç–æ—Ä–∞
// 		break
// 	}

//		select {}
//	}
// package main

// import (
// 	"log"
// 	"os"
// 	"os/exec"
// 	"path/filepath"
// 	"strings"

// 	"github.com/ElRealisto/RieltorGenie/internal/bot"
// 	"github.com/ElRealisto/RieltorGenie/internal/objects"
// 	"github.com/ElRealisto/RieltorGenie/internal/users"
// 	"github.com/joho/godotenv"
// )

// func main() {
// 	// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ .env —Ñ–∞–π–ª—É
// 	err := godotenv.Load()
// 	if err != nil {
// 		log.Fatal("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É")
// 	}

// 	// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É Telegram –±–æ—Ç–∞ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
// 	token := os.Getenv("TELEGRAM_BOT_TOKEN")
// 	if token == "" {
// 		log.Fatal("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
// 	}

// 	// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
// 	users.InitDefaultUsers()

// 	// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
// 	allUsers := users.GetAll()

// 	// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
// 	b, err := bot.New(token)
// 	if err != nil {
// 		log.Fatalf("‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–æ—Ç–∞: %v", err)
// 	}

// 	// –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤ –æ–∫—Ä–µ–º—ñ–π –≥–æ—Ä—É—Ç–∏–Ω—ñ
// 	go b.Start()

// 	for _, u := range allUsers {
// 		if u.Role != users.RealtorRole {
// 			continue
// 		}

// 		// –®–ª—è—Ö –¥–æ parsed_objects.json
// 		internalPath := filepath.Join("internal", "objects", "parsed_objects.json")

// 		var properties []objects.Property

// 		// –Ø–∫—â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î ‚Äî –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
// 		if _, err := os.Stat(internalPath); err == nil {
// 			var loaded []objects.Property
// 			loaded, err = objects.LoadParsedObjects()
// 			if err != nil {
// 				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è parsed_objects.json: %v", err)
// 				continue
// 			}
// 			properties = loaded
// 			log.Printf("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —ñ–∑ %s", len(properties), internalPath)
// 		} else {
// 			// –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î ‚Äî –ø–∞—Ä—Å–∏–º–æ –ø—Ä–æ—Ñ—ñ–ª—å
// 			parsed, err := objects.ParseRealtorProfile(u.ProfileURL)
// 			if err != nil {
// 				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –ø—Ä–æ—Ñ—ñ–ª—é %s: %v", u.ProfileURL, err)
// 				continue
// 			}

// 			// –ü—Ä–∏–≤–æ–¥–∏–º–æ []any –¥–æ []objects.Property
// 			for _, item := range parsed {
// 				prop, ok := item.(objects.Property)
// 				if !ok {
// 					log.Println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—è —Ç–∏–ø—É –¥–æ Property")
// 					continue
// 				}
// 				properties = append(properties, prop)
// 			}

// 			// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±'—î–∫—Ç–∏ –≤ parsed_objects.json
// 			anyProps := make([]any, len(properties))
// 			for i, p := range properties {
// 				anyProps[i] = p
// 			}

// 			err = objects.SavePropertiesToFile(anyProps, internalPath)
// 			if err != nil {
// 				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è JSON: %v", err)
// 				continue
// 			}
// 			log.Printf("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —É %s", len(properties), internalPath)

// 			// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö
// 			profileSlug := strings.ReplaceAll(strings.TrimPrefix(u.ProfileURL, "https://"), "/", "_")
// 			baseDir := filepath.Join("data", profileSlug)

// 			err = objects.SaveObjectsByCategory(anyProps, baseDir)
// 			if err != nil {
// 				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö: %v", err)
// 				continue
// 			}
// 			log.Printf("üì¶ –û–±'—î–∫—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É %s", baseDir)
// 		}

// 		// –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥—É
// 		objects.StartAutoParsing(u.ProfileURL, internalPath)

// 		// üî• –£–°–Ü–ì–î–ê –≥–µ–Ω–µ—Ä—É—î–º–æ search_URLs.json –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–±–æ –ø–∞—Ä—Å–∏–Ω–≥—É
// 		if err := runGenerateStreetURL(); err != nil {
// 			log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–∫—Ä–∏–ø—Ç–∞ generateStreetURL.js: %v", err)
// 			continue
// 		}
// 		log.Println("üåê –°–∫—Ä–∏–ø—Ç generateStreetURL.js —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

// 		notifyFunc := func(realtor users.User, message string) error {
// 			return b.SendMarkdownMessage(realtor.TelegramID, message)
// 		}

// 		// –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –æ–±'—î–∫—Ç—ñ–≤ –∑ —Ñ–∞–π–ª—É search_URLs.json
// 		go objects.StartMonitoring(allUsers, notifyFunc)

// 		// –ê–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ –∑ –ª–æ–≥—ñ–∫–æ—é –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
// 		// go objects.StartAutoParsingWithMonitoring(u.ProfileURL, internalPath, runGenerateStreetURL)

// 		// –ó—É–ø–∏–Ω—è—î–º–æ—Å—å –Ω–∞ –ø–µ—Ä—à–æ–º—É —Ä—ñ—î–ª—Ç–æ—Ä—ñ
// 		break
// 	}

// 	// –ù–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∏–π –±–ª–æ–∫—É—é—á–∏–π select, —â–æ–± –Ω–µ –∑–∞–≤–µ—Ä—à—É–≤–∞–≤—Å—è main
// 	select {}
// }

// // runGenerateStreetURL –∑–∞–ø—É—Å–∫–∞—î Node.js —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó search_URLs.json
//
//	func runGenerateStreetURL() error {
//		cmd := exec.Command("node", "scripts/generateStreetURL.js")
//		cmd.Stdout = os.Stdout
//		cmd.Stderr = os.Stderr
//		return cmd.Run()
//	}
package main

import (
	"log"
	"os"
	"os/exec"
	"path/filepath"
	"strings"

	"github.com/ElRealisto/RieltorGenie/internal/bot"
	"github.com/ElRealisto/RieltorGenie/internal/objects"
	"github.com/ElRealisto/RieltorGenie/internal/users"
	"github.com/joho/godotenv"
)

func main() {
	err := godotenv.Load()
	if err != nil {
		log.Fatal("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É")
	}

	token := os.Getenv("TELEGRAM_BOT_TOKEN")
	if token == "" {
		log.Fatal("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
	}

	users.InitDefaultUsers()
	allUsers := users.GetAll()

	b, err := bot.New(token)
	if err != nil {
		log.Fatalf("‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–æ—Ç–∞: %v", err)
	}

	go b.Start()

	for _, u := range allUsers {
		if u.Role != users.RealtorRole {
			continue
		}

		internalPath := filepath.Join("internal", "objects", "parsed_objects.json")

		if _, err := os.Stat(internalPath); err == nil {
			loaded, err := objects.LoadParsedObjects()
			if err != nil {
				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è parsed_objects.json: %v", err)
				continue
			}
			log.Printf("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —ñ–∑ %s", len(loaded), internalPath)
		} else {
			parsed, err := objects.ParseRealtorProfile(u.ProfileURL)
			if err != nil {
				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –ø—Ä–æ—Ñ—ñ–ª—é %s: %v", u.ProfileURL, err)
				continue
			}

			err = objects.SavePropertiesToFile(parsed, internalPath)
			if err != nil {
				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è JSON: %v", err)
				continue
			}
			log.Printf("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ %d –æ–±'—î–∫—Ç—ñ–≤ —É %s", len(parsed), internalPath)

			profileSlug := strings.ReplaceAll(strings.TrimPrefix(u.ProfileURL, "https://"), "/", "_")
			baseDir := filepath.Join("data", profileSlug)

			err = objects.SaveObjectsByCategory(parsed, baseDir)
			if err != nil {
				log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö: %v", err)
				continue
			}
			log.Printf("üì¶ –û–±'—î–∫—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É %s", baseDir)
		}

		objects.StartAutoParsing(u.ProfileURL, internalPath)

		if err := runGenerateStreetURL(); err != nil {
			log.Printf("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–∫—Ä–∏–ø—Ç–∞ generateStreetURL.js: %v", err)
			continue
		}
		log.Println("üåê –°–∫—Ä–∏–ø—Ç generateStreetURL.js —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

		notifyFunc := func(realtor users.User, message string) error {
			return b.SendMarkdownMessage(realtor.TelegramID, message)
		}

		go objects.StartMonitoring(allUsers, notifyFunc)

		break
	}

	select {}
}

func runGenerateStreetURL() error {
	cmd := exec.Command("node", "scripts/generateStreetURL.js")
	cmd.Stdout = os.Stdout
	cmd.Stderr = os.Stderr
	return cmd.Run()
}
